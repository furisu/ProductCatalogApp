@model IEnumerable<ProductCatalogApp.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Products" asp-action="Index" method="get" class="form-inline mb-3">
    <input type="text" name="searchString" class="form-control mr-2" placeholder="製品名やカテゴリで検索" />
    <input type="number" name="minPrice" class="form-control mr-2" placeholder="最低価格" step="100" />
    <input type="number" name="maxPrice" class="form-control mr-2" placeholder="最高価格" step="100" />
    <button type="submit" class="btn btn-primary">検索</button>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.PriceSortParam" asp-route-searchString="@ViewBag.SearchString" asp-route-minPrice="@ViewBag.MinPrice" asp-route-maxPrice="@ViewBag.MaxPrice">
                価格
                @if (ViewBag.CurrentSort == "price_asc")
                {
                    <span>▲</span> <!-- 昇順マーク -->
                }
                else if (ViewBag.CurrentSort == "price_desc")
                {
                    <span>▼</span> <!-- 降順マーク -->
                }
                </a>
            </th>   
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                登録日
            </th>
            <th>
                更新日時
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @item.CreatedAt.ToString("yyyy/MM/dd HH:mm")
            </td>
            <td>
                @item.UpdatedAt?.ToString("yyyy/MM/dd HH:mm")
            </td>

            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
            <td>    
                @if (!string.IsNullOrEmpty(item.ImageUrl))
                {
                    <img src="@item.ImageUrl" alt="Product Image" style="width:100px;" />
                }
            </td>
        </tr>
}
    </tbody>
</table>

<nav aria-label="ページネーション">
    <ul class="pagination justify-content-center">
        @if (ViewBag.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index"
                   asp-route-page="@(ViewBag.CurrentPage - 1)"
                   asp-route-searchString="@ViewBag.SearchString"
                   asp-route-minPrice="@ViewBag.MinPrice"
                   asp-route-maxPrice="@ViewBag.MaxPrice"
                   asp-route-sortOrder="@ViewBag.CurrentSort">前へ</a>
            </li>
        }

        @for (int i = 1; i <= (int)ViewBag.TotalPages; i++)
        {
            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                <a class="page-link" asp-action="Index"
                   asp-route-page="@i"
                   asp-route-searchString="@ViewBag.SearchString"
                   asp-route-minPrice="@ViewBag.MinPrice"
                   asp-route-maxPrice="@ViewBag.MaxPrice"
                   asp-route-sortOrder="@ViewBag.CurrentSort">@i</a>
            </li>
        }

        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index"
                   asp-route-page="@(ViewBag.CurrentPage + 1)"
                   asp-route-searchString="@ViewBag.SearchString"
                   asp-route-minPrice="@ViewBag.MinPrice"
                   asp-route-maxPrice="@ViewBag.MaxPrice"
                   asp-route-sortOrder="@ViewBag.CurrentSort">次へ</a>
            </li>
        }
    </ul>
</nav>
